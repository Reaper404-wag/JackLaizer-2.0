#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç—ã —Å –ì–û–°–¢–∞–º–∏ –¥–ª—è –±–æ—Ç–∞ –Ø–∫–æ–≤–∞ –î–∞–≤–∏–¥–æ–≤–∏—á–∞
"""

import json
import re
from typing import Dict, List, Optional, Tuple
from datetime import datetime
import requests
from dataclasses import dataclass

@dataclass
class GOSTInfo:
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ì–û–°–¢–µ"""
    number: str
    title: str
    status: str  # "–¥–µ–π—Å—Ç–≤—É—é—â–∏–π", "–æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π", "–∑–∞–º–µ–Ω–µ–Ω"
    description: str
    application_areas: List[str]
    replaced_by: Optional[str] = None
    effective_date: Optional[str] = None
    cancellation_date: Optional[str] = None
    recommendations: List[str] = None

class EnhancedGOSTSystem:
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç—ã —Å –ì–û–°–¢–∞–º–∏"""
    
    def __init__(self, db_file='gost_enhanced_db.json'):
        self.db_file = db_file
        self.gost_database = self._load_database()
        
    def _load_database(self) -> Dict[str, GOSTInfo]:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –ì–û–°–¢–æ–≤"""
        try:
            with open(self.db_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
                return {k: GOSTInfo(**v) for k, v in data.items()}
        except FileNotFoundError:
            return self._create_initial_database()
    
    def _create_initial_database(self) -> Dict[str, GOSTInfo]:
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –±–∞–∑—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ì–û–°–¢–æ–≤"""
        initial_gosts = {
            "2.105-95": GOSTInfo(
                number="2.105-95",
                title="–ï–°–ö–î. –û–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º",
                status="–¥–µ–π—Å—Ç–≤—É—é—â–∏–π",
                description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –≤—Ö–æ–¥—è—â–∏—Ö –≤ —Å–æ—Å—Ç–∞–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏–∑–¥–µ–ª–∏–π –≤—Å–µ—Ö –æ—Ç—Ä–∞—Å–ª–µ–π –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç–∏.",
                application_areas=["–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"],
                recommendations=[
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π",
                    "–û–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏",
                    "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —à—Ä–∏—Ñ—Ç–∞–º, –ø–æ–ª—è–º, –Ω—É–º–µ—Ä–∞—Ü–∏–∏"
                ],
                effective_date="1996-07-01"
            ),
            "7.32-2017": GOSTInfo(
                number="7.32-2017",
                title="–û—Ç—á–µ—Ç –æ –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Ä–∞–±–æ—Ç–µ. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                status="–¥–µ–π—Å—Ç–≤—É—é—â–∏–π", 
                description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏ –ø—Ä–∞–≤–∏–ª–∞–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ù–ò–†.",
                application_areas=["–Ω–∞—É—á–Ω—ã–µ –æ—Ç—á–µ—Ç—ã", "–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞", "–¥–∏—Å—Å–µ—Ä—Ç–∞—Ü–∏–∏"],
                recommendations=[
                    "–û–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –Ω–∞—É—á–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –æ—Ç—á–µ—Ç–æ–≤",
                    "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö",
                    "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—é"
                ],
                effective_date="2018-07-01"
            ),
            "19.301-94": GOSTInfo(
                number="19.301-94",
                title="–ï–°–î. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –º–µ—Ç–æ–¥–∏–∫–∞ –∏—Å–ø—ã—Ç–∞–Ω–∏–π. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é",
                status="–¥–µ–π—Å—Ç–≤—É—é—â–∏–π",
                description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º –∏ –º–µ—Ç–æ–¥–∏–∫ –∏—Å–ø—ã—Ç–∞–Ω–∏–π.",
                application_areas=["–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ", "—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∏—Å–ø—ã—Ç–∞–Ω–∏—è"],
                recommendations=[
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º –∏—Å–ø—ã—Ç–∞–Ω–∏–π –ü–û",
                    "–û–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –º–µ—Ç–æ–¥–∏–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                    "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏—Å–ø—ã—Ç–∞–Ω–∏–π"
                ],
                effective_date="1995-01-01"
            ),
            "34.602-89": GOSTInfo(
                number="34.602-89",
                title="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã",
                status="–æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π",
                description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.",
                application_areas=["–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ü–û"],
                replaced_by="–ì–û–°–¢ –† 51904-2002",
                cancellation_date="2002-07-01",
                recommendations=[
                    "–ó–∞–º–µ–Ω–µ–Ω –Ω–∞ –ì–û–°–¢ –† 51904-2002",
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –¥–ª—è –¢–ó –Ω–∞ –ê–°",
                    "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —ç–≤–æ–ª—é—Ü–∏–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤"
                ]
            ),
            "2.004-88": GOSTInfo(
                number="2.004-88", 
                title="–ï–°–ö–î. –û–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∏—Ö –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–µ—á–∞—Ç–∞—é—â–∏—Ö –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –≤—ã–≤–æ–¥–∞ –≠–í–ú",
                status="–¥–µ–π—Å—Ç–≤—É—é—â–∏–π",
                description="–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—Å–∫–∏—Ö –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø–µ—á–∞—Ç–∞—é—â–∏—Ö –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –≤—ã–≤–æ–¥–∞ –≠–í–ú.",
                application_areas=["–°–ê–ü–†", "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞"],
                recommendations=[
                    "–ê–∫—Ç—É–∞–ª–µ–Ω –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –°–ê–ü–† —Å–∏—Å—Ç–µ–º",
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —á–µ—Ä—Ç–µ–∂–µ–π –Ω–∞ –ø–ª–æ—Ç—Ç–µ—Ä",
                    "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º"
                ],
                effective_date="1989-01-01"
            )
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        self._save_database(initial_gosts)
        return initial_gosts
    
    def _save_database(self, database: Dict[str, GOSTInfo]):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∞–∑—ã –ì–û–°–¢–æ–≤"""
        data = {k: v.__dict__ for k, v in database.items()}
        with open(self.db_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    
    def search_by_number(self, gost_number: str) -> Optional[GOSTInfo]:
        """–ü–æ–∏—Å–∫ –ì–û–°–¢–∞ –ø–æ –Ω–æ–º–µ—Ä—É"""
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä (—É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã, –ø—Ä–∏–≤–æ–¥–∏–º –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–∏–¥—É)
        normalized_number = self._normalize_gost_number(gost_number)
        
        # –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if normalized_number in self.gost_database:
            return self.gost_database[normalized_number]
        
        # –ò—â–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        for number, gost_info in self.gost_database.items():
            if normalized_number in number or number in normalized_number:
                return gost_info
        
        return None
    
    def _normalize_gost_number(self, number: str) -> str:
        """–ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –ì–û–°–¢–∞"""
        # –£–±–∏—Ä–∞–µ–º "–ì–û–°–¢", –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
        clean_number = re.sub(r'^–ì–û–°–¢\s*', '', number.strip(), flags=re.IGNORECASE)
        return clean_number
    
    def get_recommendations_for_task(self, task_description: str) -> List[Tuple[str, GOSTInfo]]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ì–û–°–¢–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"""
        recommendations = []
        task_lower = task_description.lower()
        
        for number, gost_info in self.gost_database.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç—è—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
            for area in gost_info.application_areas:
                if any(keyword in task_lower for keyword in area.lower().split()):
                    recommendations.append((number, gost_info))
                    break
        
        return recommendations
    
    def format_gost_info(self, gost_info: GOSTInfo, include_recommendations: bool = True) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ì–û–°–¢–µ –¥–ª—è –≤—ã–≤–æ–¥–∞"""
        status_emoji = {
            "–¥–µ–π—Å—Ç–≤—É—é—â–∏–π": "‚úÖ",
            "–æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π": "‚ùå", 
            "–∑–∞–º–µ–Ω–µ–Ω": "üîÑ"
        }
        
        result = []
        result.append(f"üìã **–ì–û–°–¢ {gost_info.number}**")
        result.append(f"üìù {gost_info.title}")
        result.append(f"{status_emoji.get(gost_info.status, '‚ùì')} –°—Ç–∞—Ç—É—Å: {gost_info.status}")
        result.append("")
        result.append(f"‚ÑπÔ∏è **–û–ø–∏—Å–∞–Ω–∏–µ:**")
        result.append(gost_info.description)
        result.append("")
        
        if gost_info.application_areas:
            result.append("üéØ **–û–±–ª–∞—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:**")
            for area in gost_info.application_areas:
                result.append(f"  ‚Ä¢ {area}")
            result.append("")
        
        if gost_info.effective_date:
            result.append(f"üìÖ –î–∞—Ç–∞ –≤–≤–µ–¥–µ–Ω–∏—è: {gost_info.effective_date}")
        
        if gost_info.status == "–æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π" and gost_info.cancellation_date:
            result.append(f"üóìÔ∏è –î–∞—Ç–∞ –æ—Ç–º–µ–Ω—ã: {gost_info.cancellation_date}")
        
        if gost_info.replaced_by:
            result.append(f"üîÑ –ó–∞–º–µ–Ω–µ–Ω –Ω–∞: {gost_info.replaced_by}")
        
        if include_recommendations and gost_info.recommendations:
            result.append("")
            result.append("üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é:**")
            for rec in gost_info.recommendations:
                result.append(f"  ‚Ä¢ {rec}")
        
        return "\n".join(result)

def main():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"""
    system = EnhancedGOSTSystem()
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É
    print("üîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ì–û–°–¢–∞ –ø–æ –Ω–æ–º–µ—Ä—É:")
    gost = system.search_by_number("2.105-95")
    if gost:
        print(system.format_gost_info(gost))
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    print("üéØ –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –∑–∞–¥–∞—á–∏:")
    recommendations = system.get_recommendations_for_task("–Ω—É–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
    for number, gost_info in recommendations:
        print(f"üìã {number}: {gost_info.title}")

if __name__ == "__main__":
    main()
